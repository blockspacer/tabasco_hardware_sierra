/*
 * $Id: usidefs.h,v 1.12 2009/06/16 20:41:40 blee Exp $
 *
 * Filename: usidefs.h
 *
 * Purpose:  Internal definitions for USB Scanning task package
 *
 * Copyright: C 2008 Sierra Wireless Inc., All rights reserved
 *
 */

/* Includes */
#include "aa/aaglobal.h"
#include "dl/dludefs.h"
#include "os/swi_ossdk.h"
#include "pi/piudefs.h"
#include "ic/icudefs.h"
#include "ci/ciudefs.h"
#include "hp/hpudefs.h"
#include "us/usudefs.h"

/* Defines */

/* DL Logging Mask Definitions */
#define USLOG_CLASSA           0x0001  /* Important but not verbose logging */
#define USLOG_CLASSB           0x0002  /* read path, can be disabled */
#define USLOG_CLASSC           0x0004  /* Write path, can be disabled */
#define USLOG_CLASSD           0x0008  /* Verbose logging, not classified */

/* US Logging Filter Mask. This mask must be a power of 2 and 
 * us used to reduce the number of logs generated by the US
 * task. NOTE: US only logs if DL Logging is enabled for the
 * package and we only want to know that it's running, not 
 * how often it goes through the loop
 */
#define USFILTERMASK           0xF

#define USSLEEPSCAN            300   /* Scan task Sleep duration (ms) */
#define USSLEEPDETECT          350   /* Detection task Sleep duration (ms) */

/*
 * Name:    usbeptable
 *
 * Purpose: US endpoints table
 *          
 * Members: ushipep         - read/write endpoints for HIP   
 *          usdiagep        - read/write endpoints for DIAG  
 *          usnmeaep        - read/write endpoints for NMEA  
 *          usatcmdep       - read/write endpoints for AT cmd   
 *          usdata1ep       - read/write endpoints for DATA1   
 *          usdata2ep       - read/write endpoints for DATA2   
 *          usdata3ep       - read/write endpoints for DATA3 
 *          usmassstorageep - read/write endpoints for MASSS STORAGE (not
 *                              implemented yet) 
 *
 * Notes: none
 *
 */
struct usbeptable {
    struct usbep   ushipep;
    struct usbep   usdiagep;
    struct usbep   usnmeaep;
    struct usbep   usatcmdep;
    struct usbep   usdata1ep;
    struct usbep   usdata2ep;
    struct usbep   usdata3ep;
    struct usbep   usmassstorageep;
};

/*
 * Name: usdcb
 *
 * Purpose: US Detection Task control block
 *          
 * Members: usdwaiter     - Waiter structure used by the US detection
 *                          task for timing during startup and for 
 *                          blocking during loopback requests
 *          usdldcb       - Control block for the DL package
 *                          so Detection task can generate log msgs
 *          usdmdmstate   - The state of the modem as returned by the
 *                          loopback test in the callback function. See
 *                          the "runningapp" argument in the function 
 *                          prototype in "hplooprequest()" for details
 *          usdlbresult   - The result code provided to us in the loop-
 *                          back test callback
 *          usddevresult  - The result code provided to us in the device
 *                          information request callback
 *          useptab       - Endpoint number table for all possible endpoints
 *                           - contains read/write endpoints
 * Notes: none
 *
 */
struct usdcb {
    struct swi_oswaiter usdwaiter;
    struct dlusercb     usdldcb;
    swi_bool            usdmdmstate;
    enum hpphstatus     usdlbresult;
    enum hpphstatus     usddevresult;
    struct usbeptable   useptab;
};

/*
 * Name: usscb
 *
 * Purpose: US scan task control block
 *          
 *
 * Members: uscwaiterscan  
 *                     - An OS package Waiter structure used by
 *                       the US scan task to generate timed intervals
 *          uscusbctl  - The main USB control structure required 
 *                       by the OS package for all interaction 
 *                       with its USB subroutine calls. There is 
 *                       only one of these structures for the 
 *                       whole SDK
 *          usdlscb    - User control block for the DL package
 *                       so Scan task can generate log msgs
 *
 * Notes: none
 *
 */
struct usscb {
    struct swi_oswaiter uscwaiterscan;
    struct swi_osusb    uscusbctl;
    struct dlusercb     usdlscb;
};


#include "usiproto.h"

/*
 * $Log: usidefs.h,v $
 */
/*
 * $Log: usidefs.h,v $
 */
